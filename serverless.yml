service: employee-manager

# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs12.x
  profile: jprieto
  stage: ${opt:stage}
  region: ${opt:region}
  apiGateway:
      request:
        schemas:
          create-employee:
            name: CreateModelEmployee
            schema: ${file(infraestructure/handlers/schemas/employees.json)}
            description: "A Model validation for adding employees"
  environment:
    MYSQL_HOST: ${file(./config/${opt:stage, 'dev'}.json):MYSQL_HOST}
    MYSQL_PORT: ${file(./config/${opt:stage, 'dev'}.json):MYSQL_PORT}
    MYSQL_USER: ${file(./config/${opt:stage, 'dev'}.json):MYSQL_USER}
    MYSQL_PASSWORD: ${file(./config/${opt:stage, 'dev'}.json):MYSQL_PASSWORD}
    MYSQL_DATABASE: ${file(./config/${opt:stage, 'dev'}.json):MYSQL_DATABASE}


functions:
  getEmployees:
    handler: infraestructure/handlers/employees_handler.getEmployees
    events:
      - http:
          path: employees_handler # https:://domain.com/stage/employees
          method: get

  createEmployees:
    handler: infraestructure/handlers/employees_handler.createEmployees
    events:
      - http:
          path: employees_handler # https:://domain.com/stage/employees
          method: post
          request:
            schemas:
              application/json: create-employee

  updateEmployees:
    handler: infraestructure/handlers/employees_handler.updateEmployees
    events:
      - http:
          path: employees_handler/{id} # https:://domain.com/stage/employees/{id}
          method: put
          request:
            schemas:
              application/json: create-employee

  deleteEmployees:
    handler: infraestructure/handlers/employees_handler.deleteEmployees
    events:
      - http:
          path: employees_handler/{id} # https:://domain.com/stage/employees/{id}
          method: delete

  getEmployee:
    handler: infraestructure/handlers/employees_handler.getEmployee
    events:
      - http:
          path: employees_handler/{id} # https:://domain.com/stage/employees/{id}
          method: get

plugins:
  - serverless-offline
